[{"C:\\Users\\alexk\\Desktop\\t127\\sem5\\assignments\\fullstack\\101075604_comp3123_a2\\src\\index.js":"1","C:\\Users\\alexk\\Desktop\\t127\\sem5\\assignments\\fullstack\\101075604_comp3123_a2\\src\\App.js":"2","C:\\Users\\alexk\\Desktop\\t127\\sem5\\assignments\\fullstack\\101075604_comp3123_a2\\src\\reportWebVitals.js":"3","C:\\Users\\alexk\\Desktop\\t127\\sem5\\assignments\\fullstack\\101075604_comp3123_a2\\src\\components\\WeatherContainer.js":"4","C:\\Users\\alexk\\Desktop\\t127\\sem5\\assignments\\fullstack\\101075604_comp3123_a2\\src\\components\\Navbar.js":"5"},{"size":575,"mtime":1625235493727,"results":"6","hashOfConfig":"7"},{"size":3132,"mtime":1625241882625,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607273661296,"results":"9","hashOfConfig":"7"},{"size":8935,"mtime":1625242028985,"results":"10","hashOfConfig":"7"},{"size":3902,"mtime":1625242101463,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"5yfgys",{"filePath":"15","messages":"16","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"C:\\Users\\alexk\\Desktop\\t127\\sem5\\assignments\\fullstack\\101075604_comp3123_a2\\src\\index.js",[],["26","27"],"C:\\Users\\alexk\\Desktop\\t127\\sem5\\assignments\\fullstack\\101075604_comp3123_a2\\src\\App.js",["28","29","30","31","32","33","34"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport WeatherContainer from \"./components/WeatherContainer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport Navbar from \"./components/Navbar\";\nimport cities from \"./city.list.json\";\n\n\nfunction App() {\n  const [city, setCity] = useState(2643743);\n  const [locCity, setLocCity] = useState(2643743);\n  const [locCityBox, setLocCityBox] = useState(<WeatherContainer city={`id=${locCity}`} />);\n  const handleCity = (newCity) =>{\n    setCity(newCity)\n    console.log(newCity)\n  }\n  let local = []\n  const checkPos = (currLon, currLat, checkLon, checkLat) => {\n    if(!(currLon<0&&checkLon<0)&&!(currLon>0&&checkLon>0)||!(currLat<0&&checkLat<0)&&!(currLat>0&&checkLat>0)){\n      //Different hemisphere \n      return {diffLon:5000,diffLat:5000}\n    }\n    let abCurrLon = Math.abs(currLon)\n    let abCurrLat = Math.abs(currLat)\n    let abCheckLat = Math.abs(checkLat)\n    let abCheckLon = Math.abs(checkLon)\n    return {diffLon:Math.abs(abCurrLon - abCheckLon),diffLat:Math.abs(abCurrLat - abCheckLat)}\n\n  } \n const getLocal = () => {\n   navigator.geolocation.getCurrentPosition(function(position) {\n    console.log(\"Latitude is :\", position.coords.latitude);\n    console.log(\"Longitude is :\", position.coords.longitude);\n\n      cities.map(city => {\n\n        if(city.coord){\n          let dif = checkPos(position.coords.longitude, position.coords.latitude, city.coord.lon, city.coord.lat )\n          if(dif.diffLat<0.1 && dif.diffLon<0.1){\n            console.log(`${city.name} lat: ${dif.diffLat} lon: ${dif.diffLon}`)\n\n        local.push({...city,...dif})\n        local.sort((a,b)=>{\n          return (a.diffLat+a.diffLon) - (b.diffLat+b.diffLon);\n        })\n          }\n        }\n        \n      } )\n      console.log(local)\n      if(local.length>1){\n        if(locCity==local[0].id){\n          setLocCity(\"\")\n          setTimeout(() => {\n            \n            setLocCity(local[0].id)\n          },50)\n        }else{\n          setLocCity(local[0].id)\n\n        }\n      }\n      \n    });\n  }\n  useEffect(() => {\n  setLocCityBox(\"\")\nsetLocCityBox(<WeatherContainer city={`id=${locCity}`} />)\nconsole.log(locCity)\n}, [locCity])\n  return (\n    <>\n      <Navbar locButt={ <button className={\"btn mt-1 btn-sm btn-info\"} onClick={getLocal}><FontAwesomeIcon\n              icon={faMapMarkerAlt}\n              width=\"70\"\n              height=\"30\"\n              color={\"000\"}\n              className=\"d-inline-block mr-2\"\n            />Use location</button>} handleCity={handleCity} />\n      <div className={\"container\"}>\n      \n      \n       \n          <div className={\"row d-flex justify-content-between p-5\"}>\n            {locCityBox}\n            <WeatherContainer city={\"id=5128581\"} />\n            <WeatherContainer city={\"q=Athens\"} />\n            <WeatherContainer city={`id=${city}`} />\n\n          </div>\n        \n          <div className={\"row  justify-content-center p-5\"}>\n\n          </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\alexk\\Desktop\\t127\\sem5\\assignments\\fullstack\\101075604_comp3123_a2\\src\\reportWebVitals.js",[],"C:\\Users\\alexk\\Desktop\\t127\\sem5\\assignments\\fullstack\\101075604_comp3123_a2\\src\\components\\WeatherContainer.js",["35","36","37","38","39","40","41","42","43","44","45","46"],"import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDoubleUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport axios from \"axios\";\r\n\r\nfunction WeatherContainer(props) {\r\n  const { city } = props;\r\n  const api = process.env.REACT_APP_API_KEY;\r\n\r\n  const [appState, setAppState] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setAppState({ loading: true });\r\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?${city}&appid=${api}`;\r\n    axios.get(apiUrl).then((weather) => {\r\n      const currWeather = weather.data;\r\n      console.log(weather.data);\r\n      setTimeout(() => {\r\n        setAppState({ loading: false, weather: currWeather });\r\n        setWeather({\r\n          description: currWeather.weather[0].description,\r\n          icon: currWeather.weather[0].icon,\r\n          currTemp: currWeather.main.temp - 273.15,\r\n          minTemp: currWeather.main.temp_min - 273.15,\r\n          maxTemp: currWeather.main.temp_max - 273.15,\r\n          feels_like: currWeather.main.feels_like - 273.15,\r\n          humidity: currWeather.main.humidity + \"%\",\r\n          windSpeed: currWeather.wind.speed + \" km/h\",\r\n          windDir: {\r\n            direction: Math.floor(currWeather.wind.deg / 45),\r\n            exactDirection: currWeather.wind.deg,\r\n            isExact: currWeather.wind.deg % 45 == 0,\r\n          },\r\n          rise: new Date(currWeather.sys.sunrise * 1000).toLocaleTimeString(\r\n            \"en-CA\"\r\n          ),\r\n          set: new Date(currWeather.sys.sunset * 1000).toLocaleTimeString(\r\n            \"en-CA\"\r\n          ),\r\n          location: currWeather.name + \", \" + currWeather.sys.country,\r\n        });\r\n      }, 300);\r\n    });\r\n  }, [setAppState, city]);\r\n  const [weather, setWeather] = useState(\r\n    {\r\n      description: \"\",\r\n      currTemp: \"\",\r\n      minTemp: \"\",\r\n      maxTemp: \"\",\r\n      feels_like: \"\",\r\n      humidity: \"\",\r\n      windSpeed: \"\",\r\n      windDir: \"\",\r\n      rise: \"\",\r\n      set: \"\",\r\n      location: \"\",\r\n    },\r\n    []\r\n  );\r\n  const getDirection = (windD) => {\r\n    switch (windD.direction) {\r\n      case 1:\r\n        return windD.isExact ? \"NE\" : \"ENE\";\r\n        break;\r\n\r\n      case 2:\r\n        return windD.isExact ? \"E\" : \"ESE\";\r\n        break;\r\n\r\n      case 3:\r\n        return windD.isExact ? \"SE\" : \"SSE\";\r\n        break;\r\n\r\n      case 4:\r\n        return windD.isExact ? \"S\" : \"SSW\";\r\n        break;\r\n\r\n      case 5:\r\n        return windD.isExact ? \"SW\" : \"WSW\";\r\n        break;\r\n\r\n      case 6:\r\n        return windD.isExact ? \"W\" : \"WNW\";\r\n        break;\r\n\r\n      case 7:\r\n        return windD.isExact ? \"NW\" : \"NNW\";\r\n        break;\r\n      case 0:\r\n        return windD.isExact ? \"N\" : \"NNE\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <div style={{minHeight: \"100%\"}} className={\"col-xl-6 my-3 col-12\"}>\r\n      <div\r\n      style={{minHeight: \"100%\"}}\r\n        className={\r\n          \"col-12 row p-2 shadow p-3 mb-5  d-flex align-self-center align-items-center justify-content-center round-box bg-zero useBorder\"\r\n        }\r\n      >\r\n        {appState.loading == false && appState.weather != \"\" ? (\r\n          <>\r\n          <div className={\r\n          \"col-12 \"\r\n        }>\r\n            <h1 className={\"\"}>\r\n              <img\r\n                className=\"icons\"\r\n                src={`https://openweathermap.org/img/wn/${weather.icon}@2x.png`}\r\n                alt={weather.description}\r\n              ></img>\r\n              {weather.location}\r\n            </h1>\r\n\r\n          </div>\r\n          <div className={\r\n            \"col-12 d-flex justify-content-center align-items-center\"\r\n          }>\r\n            <div className={\"d-flex justify-content-center ml-lg-1 row mt-3\"}>\r\n              {console.log(weather)}\r\n\r\n              <div\r\n             \r\n                className={\"col-lg-6 col-12  p-1\"}\r\n                >\r\n              <div\r\n              style={{height: \"100%\"}}\r\n                className={\"col-12 bg-cleard useBorder rounded my-1 py-1 align-self-center d-flex row align-items-center\"}\r\n                >\r\n                <div\r\n             \r\n                className={\"col-12 \"}\r\n                >\r\n                <h6>Weather: {weather.description}</h6>\r\n                </div>\r\n                 <div\r\n             \r\n                className={\"col-12 \"}\r\n                >\r\n                <h6>Humidity: {weather.humidity}</h6>\r\n                   </div>\r\n                    <div\r\n             \r\n                className={\"col-12 \"}\r\n                >\r\n                <h6>\r\n                  <Tooltip\r\n                    title={`${weather.windDir.exactDirection}°  ${getDirection(\r\n                      weather.windDir\r\n                      )}`}\r\n                      placement=\"top-end\"\r\n                      \r\n                      >\r\n                    <div className={\" align-items-center\"}>\r\n                      Wind Speed: {weather.windSpeed}{\" \"}\r\n                      <div className={\" d-inline \"}>\r\n                        <FontAwesomeIcon\r\n                          icon={faAngleDoubleUp}\r\n                          width=\"40\"\r\n                          height=\"40\"\r\n                          color={\"#000\"}\r\n                          transform={{ rotate: weather.windDir.exactDirection }}\r\n                          />\r\n                      </div>\r\n                    </div>\r\n                  </Tooltip>\r\n                </h6>\r\n   </div> <div\r\n             \r\n                className={\"col-12 \"}\r\n                >\r\n                <h6>Sunrise: {weather.rise}</h6>\r\n                   </div> <div\r\n             \r\n                className={\"col-12 \"}\r\n                >\r\n                <h6>Sunset: {weather.set}</h6>\r\n   </div>\r\n              </div>\r\n              </div>\r\n              \r\n              <div\r\n             \r\n                className={\"col-lg-6 col-12 p-1\"}\r\n                >\r\n              <div\r\n              style={{minHeight: \"100%\"}}\r\n                className={\r\n                  \" col-12 row my-1 shadow-lg px-3 py-2 justify-content-center bg-cleard useBorder text-light rounded \"\r\n                }\r\n                >\r\n                <div className={\" row \"}>\r\n                  <h4>Tempurature</h4>\r\n                </div>\r\n                <div className={\"row d-flex justify-content-center\"}>\r\n                  <div className={\"col col-6 justify-content-between\"}>\r\n                    <div className={\"align-self-center \"}>Current:</div>\r\n                    </div>\r\n                  <div className={\"col col-xl-5 col-4  justify-content-between\"}>\r\n                    <div className={\"m-1 btn-sm active py-0  col col-8  col-xl-12 text-center btn-success \"}>\r\n                      {~~weather.currTemp + \" °C\"}\r\n                    </div>\r\n                  </div>\r\n               \r\n                  <div className={\"col col-6 justify-content-between\"}>\r\n                    <div className={\"align-self-center \"}>Feels Like:</div>\r\n                    </div>\r\n                  <div className={\"col col-xl-5 col-4  justify-content-between\"}>\r\n                    <div className={\"m-1 btn-sm active py-0 col col-8  col-xl-12 text-center btn-outline-success\"\r\n                      }\r\n                      >\r\n                      {~~weather.feels_like + \" °C\"}\r\n                    </div>\r\n                  </div>\r\n        \r\n                  <div className={\"col col-6 justify-content-between\"}>\r\n                    <div className={\"align-self-center \"}>Low:</div>\r\n                    </div>\r\n                  <div className={\"col col-xl-5 col-4 justify-content-between\"}>\r\n                    <div className={\"m-1 btn-sm active py-0 col col-8  col-xl-12 text-center btn-outline-primary\"\r\n                      }\r\n                      >\r\n                     {~~weather.minTemp + \" °C\"}\r\n                    </div>\r\n                  </div>\r\n               \r\n                  <div className={\"col col-6 justify-content-between\"}>\r\n                    <div className={\"align-self-center \"}>High:</div>\r\n                    </div>\r\n                  <div className={\"col col-xl-5 col-4  justify-content-between\"}>\r\n                    <div className={\"m-1 btn-sm active py-0  col col-8  col-xl-12 text-center btn-outline-danger\"\r\n                      }\r\n                      >\r\n                       {~~weather.maxTemp + \" °C\"}\r\n                    </div>\r\n                  </div>\r\n                 \r\n                </div>\r\n                <div className={\"row \"}></div>\r\n        </div> </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className={\"\"}>\r\n            <span class=\"spinner-grow spinner-grow-sm mx-1\"></span>\r\n            Loading..\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n  \r\nexport default WeatherContainer;\r\n","C:\\Users\\alexk\\Desktop\\t127\\sem5\\assignments\\fullstack\\101075604_comp3123_a2\\src\\components\\Navbar.js",["47","48","49","50","51","52","53","54","55","56"],"import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCloud } from \"@fortawesome/free-solid-svg-icons\";\r\nimport cities from \"../city.list.json\";\r\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport { matchSorter } from \"match-sorter\";\r\nimport useInterval from '@use-it/interval';\r\nconst cityOptions = cities\r\n  .filter(\r\n    (indvCity) =>\r\n      indvCity.id == \"292223\" ||\r\n      indvCity.id == \"5368361\" ||\r\n      indvCity.id == \"2968815\" ||\r\n      indvCity.name == \"Tokyo\"\r\n  )\r\n  .map((indvCity) => ({\r\n    key: indvCity.id,\r\n    value: indvCity.id,\r\n    flag: \"\",\r\n    text: indvCity.name,\r\n  }));\r\nfunction NavBar(props) {\r\n  const { handleCity, locButt } = props;\r\n  const [options, setOptions] = useState(cityOptions);\r\n  const [value, setValue] = useState(\"\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [drop, setDrop] = useState(false);\r\n  useInterval(() => {\r\n   if(value!=searchQuery){\r\n     setDrop(false)\r\n     setSearchQuery(value)\r\n   }else if(value!=\"\"&&!drop){setDrop(true)}\r\n  }, 500);\r\n  const handleChange = async (value) => {\r\n    setValue(value)\r\n    if(value==\"\"){\r\n      setOptions(cityOptions)\r\n    }\r\n  };\r\n  const sendHandleCity = (city) => {\r\n    handleCity(city.value);\r\n  };\r\n \r\n  const updateList = async (dis) => {\r\n    //setIsFetching(true)\r\n    console.log(`${dis.legnth}`)\r\n    let tmp = cities\r\n    \r\n      setOptions([...matchSorter(tmp, dis, { keys: [\"name\"] }).slice(\r\n        0,\r\n        tmp.length > 10 ? 10 : tmp.length\r\n        ).map((indvCity) => ({\r\n          key: indvCity.id,\r\n          value: indvCity.id,\r\n          flag: \"\",\r\n          text: indvCity.name + \", \" + indvCity.country,\r\n        }))])\r\n      \r\n    }\r\n    // useEffect(() => {\r\n    //   console.log(searchQuery);\r\n      \r\n    //   if (searchQuery !== \"\") {\r\n    //     updateList(searchQuery)\r\n    //   }\r\n      \r\n    // }, [searchQuery]);\r\n    useEffect(async () => {\r\n      console.log(searchQuery);\r\n      \r\n      if (searchQuery !== \"\"&&searchQuery.length>3) {\r\n        if(drop)updateList(searchQuery)\r\n        \r\n        \r\n      }\r\n      else{\r\n        setOptions(cityOptions)\r\n      }\r\n\r\n  }, [searchQuery, drop]);\r\n  return (\r\n    <>\r\n      <Navbar className={\"w-100 bg-clear useBorderB pb-0\"} variant=\"dark\">\r\n        <div className={\"row d-flex mx-2 mb-0 pb-0 w-100 align-items-center justify-content-between\"}>\r\n          <Navbar.Brand href=\"/\">\r\n            <FontAwesomeIcon\r\n              icon={faCloud}\r\n              width=\"70\"\r\n              height=\"30\"\r\n              color={\"#00bdba\"}\r\n              className=\"d-inline-block mr-2\"\r\n            />{\" \"}\r\n            Weather Simple GmbH\r\n          </Navbar.Brand>\r\n          <div className={\"row mr-3 align-items-center justify-content-between\"}>\r\n          <DropdownButton\r\n            variant={\"btn-dark mr-5 text-light\"}\r\n            as=\"h1\"\r\n            id=\"dropdown-item-button\"\r\n            title={\"Cities\"}\r\n            \r\n            // onClick={()=>setDrop(!drop)}\r\n            // show={drop}\r\n            >\r\n            <div className={\"row m-1 align-items-center justify-content-center\"}>\r\n\r\n          <input className={\"form-input mb-1 w-100 shadow-sm bg-white rounded\"} onChange={async (e)=>{\r\n            handleChange(e.target.value)\r\n          }} value={value} />\r\n            </div>\r\n            {options.map((indvCity) => (\r\n              <Dropdown.Item\r\n              onClick={() => sendHandleCity(indvCity)}\r\n              as=\"button\"\r\n              >\r\n                  {indvCity.text}\r\n                </Dropdown.Item>\r\n              ))}\r\n          </DropdownButton>\r\n              {locButt}\r\n          </div>\r\n        </div>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":12},{"ruleId":"65","severity":1,"message":"66","line":21,"column":32,"nodeType":"67","messageId":"68","endLine":21,"endColumn":34},{"ruleId":"65","severity":1,"message":"66","line":21,"column":58,"nodeType":"67","messageId":"68","endLine":21,"endColumn":60},{"ruleId":"65","severity":1,"message":"69","line":21,"column":58,"nodeType":"67","messageId":"68","endLine":21,"endColumn":60},{"ruleId":"65","severity":1,"message":"69","line":21,"column":84,"nodeType":"67","messageId":"68","endLine":21,"endColumn":86},{"ruleId":"70","severity":1,"message":"71","line":37,"column":23,"nodeType":"72","messageId":"73","endLine":37,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":54,"column":19,"nodeType":"76","messageId":"77","endLine":54,"endColumn":21},{"ruleId":"74","severity":1,"message":"75","line":33,"column":48,"nodeType":"76","messageId":"77","endLine":33,"endColumn":50},{"ruleId":"78","severity":1,"message":"79","line":45,"column":6,"nodeType":"80","endLine":45,"endColumn":25,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":66,"column":9,"nodeType":"84","messageId":"85","endLine":66,"endColumn":15},{"ruleId":"82","severity":1,"message":"83","line":70,"column":9,"nodeType":"84","messageId":"85","endLine":70,"endColumn":15},{"ruleId":"82","severity":1,"message":"83","line":74,"column":9,"nodeType":"84","messageId":"85","endLine":74,"endColumn":15},{"ruleId":"82","severity":1,"message":"83","line":78,"column":9,"nodeType":"84","messageId":"85","endLine":78,"endColumn":15},{"ruleId":"82","severity":1,"message":"83","line":82,"column":9,"nodeType":"84","messageId":"85","endLine":82,"endColumn":15},{"ruleId":"82","severity":1,"message":"83","line":86,"column":9,"nodeType":"84","messageId":"85","endLine":86,"endColumn":15},{"ruleId":"82","severity":1,"message":"83","line":90,"column":9,"nodeType":"84","messageId":"85","endLine":90,"endColumn":15},{"ruleId":"82","severity":1,"message":"83","line":93,"column":9,"nodeType":"84","messageId":"85","endLine":93,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":107,"column":27,"nodeType":"76","messageId":"77","endLine":107,"endColumn":29},{"ruleId":"74","severity":1,"message":"86","line":107,"column":56,"nodeType":"76","messageId":"77","endLine":107,"endColumn":58},{"ruleId":"74","severity":1,"message":"75","line":12,"column":19,"nodeType":"76","messageId":"77","endLine":12,"endColumn":21},{"ruleId":"74","severity":1,"message":"75","line":13,"column":19,"nodeType":"76","messageId":"77","endLine":13,"endColumn":21},{"ruleId":"74","severity":1,"message":"75","line":14,"column":19,"nodeType":"76","messageId":"77","endLine":14,"endColumn":21},{"ruleId":"74","severity":1,"message":"75","line":15,"column":21,"nodeType":"76","messageId":"77","endLine":15,"endColumn":23},{"ruleId":"61","severity":1,"message":"87","line":28,"column":10,"nodeType":"63","messageId":"64","endLine":28,"endColumn":20},{"ruleId":"61","severity":1,"message":"88","line":28,"column":22,"nodeType":"63","messageId":"64","endLine":28,"endColumn":35},{"ruleId":"74","severity":1,"message":"86","line":31,"column":12,"nodeType":"76","messageId":"77","endLine":31,"endColumn":14},{"ruleId":"74","severity":1,"message":"86","line":34,"column":18,"nodeType":"76","messageId":"77","endLine":34,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":38,"column":13,"nodeType":"76","messageId":"77","endLine":38,"endColumn":15},{"ruleId":"78","severity":1,"message":"89","line":70,"column":15,"nodeType":"72","endLine":82,"endColumn":4},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'api'. Either include it or remove the dependency array.","ArrayExpression",["92"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","Expected '!==' and instead saw '!='.","'isFetching' is assigned a value but never used.","'setIsFetching' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [setAppState, city, api]",{"range":"95","text":"96"},[1797,1816],"[setAppState, city, api]"]